<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloudok.uc.mapper.MemberMapper">
	<resultMap extends="memberMap"
		type="com.cloudok.uc.po.LinkMemberPO" id="linkMemberMap">

		<result property="to" column="to" />

		<result property="from" column="from" />

	</resultMap>
<!-- 
	<select id="friend"
		parameterType="com.cloudok.core.query.QueryBuilder"
		resultMap="linkMemberMap">

		select
		(t1.id is not null ) as `from`,
		(t2.id is not null ) as `to`,
		<include refid="columns"></include>
		from uc_member t
		left join uc_recognized t1 on t1.source_id = t.id and t1.target_id =
		#{parameters.memberId} and t1.deleted = false
		left join uc_recognized t2 on t2.target_id = t.id and t2.source_id =
		#{parameters.memberId} and t2.deleted = false
		<where>
			<if test="parameters.type == 0">
				t1.id is not null and t2.id is not null and
			</if>
			<if test="parameters.type == 1">
				t2.id is not null and 
			</if>
			<if test="parameters.type == 2">
				t1.id is not null and
			</if>
			<if test="parameters.type == 3">
				t1.read = false and
			</if>
			<include
				refid="com.cloudok.core.mybatis.BaseMapper.condition" />
		</where>
	</select>

	<select id="friendCount"
		parameterType="com.cloudok.core.query.QueryBuilder" resultType="Long">
		select
		count(1)
		from uc_member t
		left join uc_recognized t1 on t1.source_id = t.id and t1.target_id =
		#{parameters.memberId} and t1.deleted = false
		left join uc_recognized t2 on t2.target_id = t.id and t2.source_id =
		#{parameters.memberId} and t2.deleted = false
		<where>
			<if test="parameters.type == 0">
				t1.id is not null and t2.id is not null and
			</if>
			<if test="parameters.type == 1">
				t2.id is not null and
			</if>
			<if test="parameters.type == 2">
				t1.id is not null and
			</if>
			<if test="parameters.type == 3">
				t1.read = false and
			</if>
			<include
				refid="com.cloudok.core.mybatis.BaseMapper.condition" />
		</where>

	</select>

	<select id="queryLinkMember"
		parameterType="com.cloudok.core.query.QueryBuilder"
		resultMap="linkMemberMap">
		select
		(t1.id is not null ) as `from`,
		(t2.id is not null ) as `to`,
		<include refid="columns"></include>
		from uc_member t
		left join uc_recognized t1 on t1.source_id = t.id and
		t1.target_id = #{parameters.memberId} and t1.deleted = false
		left join
		uc_recognized t2 on t2.target_id = t.id and t2.source_id =
		#{parameters.memberId} and t2.deleted = false
		<where>
			<if test="parameters.ignore">
				(t1.id is null or t2.id is null) and
			</if>
			t.id != #{parameters.memberId} and
			<include
				refid="com.cloudok.core.mybatis.BaseMapper.condition" />
		</where>
	</select>
 -->
	<select id="queryFriends"
		parameterType="com.cloudok.core.query.QueryBuilder"
		resultMap="linkMemberMap">
		select
		(t1.id is not null ) as `from`,
		(t2.id is not null ) as `to`,
		<include refid="columns"></include>
		from uc_member t
		left join uc_recognized t1 on t1.source_id = t.id and
		t1.target_id = #{parameters.memberId} and t1.deleted = false
		left join
		uc_recognized t2 on t2.target_id = t.id and t2.source_id =
		#{parameters.memberId} and t2.deleted = false
		<where>
			t1.id is not null and t2.id is not null and
			t.id !=
			#{parameters.memberId} and
			<include
				refid="com.cloudok.core.mybatis.BaseMapper.condition" />
		</where>
	</select>
<!-- 
	<select id="countQueryLinkMember"
		parameterType="com.cloudok.core.query.QueryBuilder" resultType="long">
		select
		count(1)
		from uc_member t
		left join uc_recognized t1 on
		t1.source_id = t.id and t1.target_id = #{parameters.memberId} and
		t1.deleted = false
		left join uc_recognized t2 on t2.target_id = t.id
		and t2.source_id = #{parameters.memberId} and t2.deleted = false
		<where>
			<if test="parameters.ignore">
				(t1.id is null or t2.id is null) and
			</if>
			t.id != #{parameters.memberId} and
			<include
				refid="com.cloudok.core.mybatis.BaseMapper.condition" />
		</where>
	</select>
	 -->
	
	<resultMap  type="com.cloudok.uc.po.SuggsetMemberScorePO" id="suggsetMemberScoreMap">
		<result property="id" column="id"/>
		<result property="score" column="score"/>
	</resultMap>
	
	
	
	<select id="suggest" parameterType="map" resultMap="suggsetMemberScoreMap">
		select t.id, wi+ti+10  as score from uc_member t
		where t.deleted=false 
		<if test="excludedIdList != null">
			and t.id not in 
			<foreach collection="excludedIdList" close=")" item="item" open="(" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="filterType ==1">
			and exists (select 1 from uc_research_experience re where re.member_id = t.id and re.deleted=false)
		</if>
		<if test="filterType ==2">
			and exists (select 1 from uc_internship_experience re where re.member_id = t.id and re.deleted=false) 
		</if>
		<if test="filterType ==3">
			and exists (select 1 from uc_member_tags re , base_tag bt 
				where bt.id = re.tag_id and bt.category='personality' and  re.member_id = t.id and re.type=2 and re.deleted=false  )
		</if>
		<if test="filterType ==4">
			and exists (select 1 from uc_member_tags re , base_tag bt 
				where bt.id = re.tag_id and bt.category='statement' and  re.member_id = t.id and re.type=2 and re.deleted=false  )
		</if>
		order by score desc
	</select>
	
	
	<select id="getMemberCirclesList" parameterType="map" resultType="Long">
		select u.id from uc_member u where
		<if test="filterType ==1">
			EXISTS (select 1 from uc_research_experience  re where re.member_id = u.id and re.deleted = false and re.domain_id=#{businessId}) 
		</if>
		<if test="filterType ==2">
			EXISTS (select 1 from uc_internship_experience  re, base_industry bi  where re.industry_id = bi.id and  re.member_id = u.id and re.deleted = false and bi.category=#{businessId})
		</if>
		<if test="filterType ==3">
			EXISTS (select 1 from uc_project_experience  pe where  pe.member_id = u.id   and pe.deleted = false and pe.category=#{businessId})
		</if>
		<if test="filterType ==4">
			EXISTS (select 1 from uc_member_tags  mt where  mt.member_id = u.id   and mt.deleted = false and mt.tag_id=#{businessId}) 
		</if>
		<if test="excludedIdList != null">
			and u.id not in 
			<foreach collection="excludedIdList" close=")" item="item" open="(" separator=",">
				#{item}
			</foreach>
		</if>
		and u.deleted=false
		order by u.profile_update_ts desc
		limit #{offset},#{pageSize}
	</select>
	
	<select id="getMemberCirclesCount" parameterType="map" resultType="Long">
		select count(u.id) from uc_member u where
		<if test="filterType ==1">
			EXISTS (select 1 from uc_research_experience  re where re.member_id = u.id and re.deleted = false and re.domain_id=#{businessId}) 
		</if>
		<if test="filterType ==2">
			EXISTS (select 1 from uc_internship_experience  re, base_industry bi  where re.industry_id = bi.id and  re.member_id = u.id and re.deleted = false and bi.category=#{businessId})
		</if>
		<if test="filterType ==3">
			EXISTS (select 1 from uc_project_experience  pe where  pe.member_id = u.id   and pe.deleted = false and pe.category=#{businessId})
		</if>
		<if test="filterType ==4">
			EXISTS (select 1 from uc_member_tags  mt where  mt.member_id = u.id   and mt.deleted = false and mt.tag_id=#{businessId}) 
		</if>
		<if test="excludedIdList != null">
			and u.id not in 
			<foreach collection="excludedIdList" close=")" item="item" open="(" separator=",">
				#{item}
			</foreach>
		</if>
		and u.deleted=false
	</select>

</mapper>